/*
 * This file is generated by jOOQ.
*/
package com.epam.ta.reportportal.jooq.tables.records;

import com.epam.ta.reportportal.jooq.tables.Dashboard;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import javax.persistence.*;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "dashboard", schema = "public", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"name", "project_id"})
}, indexes = {
    @Index(name = "dashboard_pk", unique = true, columnList = "id ASC"),
    @Index(name = "unq_name_project", unique = true, columnList = "name ASC, project_id ASC")
})
public class DashboardRecord extends UpdatableRecordImpl<DashboardRecord> implements Record4<Integer, String, Integer, Timestamp> {

    private static final long serialVersionUID = 1577018839;

    /**
     * Setter for <code>public.dashboard.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.dashboard.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 32)
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.dashboard.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.dashboard.name</code>.
     */
    @Column(name = "name", nullable = false)
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.dashboard.project_id</code>.
     */
    public void setProjectId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.dashboard.project_id</code>.
     */
    @Column(name = "project_id", precision = 32)
    public Integer getProjectId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.dashboard.creation_date</code>.
     */
    public void setCreationDate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.dashboard.creation_date</code>.
     */
    @Column(name = "creation_date", nullable = false)
    public Timestamp getCreationDate() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Dashboard.DASHBOARD.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Dashboard.DASHBOARD.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Dashboard.DASHBOARD.PROJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Dashboard.DASHBOARD.CREATION_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DashboardRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DashboardRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DashboardRecord value3(Integer value) {
        setProjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DashboardRecord value4(Timestamp value) {
        setCreationDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DashboardRecord values(Integer value1, String value2, Integer value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DashboardRecord
     */
    public DashboardRecord() {
        super(Dashboard.DASHBOARD);
    }

    /**
     * Create a detached, initialised DashboardRecord
     */
    public DashboardRecord(Integer id, String name, Integer projectId, Timestamp creationDate) {
        super(Dashboard.DASHBOARD);

        set(0, id);
        set(1, name);
        set(2, projectId);
        set(3, creationDate);
    }
}
