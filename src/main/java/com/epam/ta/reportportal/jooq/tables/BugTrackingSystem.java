/*
 * This file is generated by jOOQ.
*/
package com.epam.ta.reportportal.jooq.tables;

import com.epam.ta.reportportal.jooq.Indexes;
import com.epam.ta.reportportal.jooq.Keys;
import com.epam.ta.reportportal.jooq.Public;
import com.epam.ta.reportportal.jooq.enums.BtsTypeEnum;
import com.epam.ta.reportportal.jooq.tables.records.BugTrackingSystemRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BugTrackingSystem extends TableImpl<BugTrackingSystemRecord> {

    private static final long serialVersionUID = 1866178468;

    /**
     * The reference instance of <code>public.bug_tracking_system</code>
     */
    public static final BugTrackingSystem BUG_TRACKING_SYSTEM = new BugTrackingSystem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BugTrackingSystemRecord> getRecordType() {
        return BugTrackingSystemRecord.class;
    }

    /**
     * The column <code>public.bug_tracking_system.id</code>.
     */
    public final TableField<BugTrackingSystemRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('bug_tracking_system_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.bug_tracking_system.url</code>.
     */
    public final TableField<BugTrackingSystemRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.bug_tracking_system.type</code>.
     */
    public final TableField<BugTrackingSystemRecord, BtsTypeEnum> TYPE = createField("type", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.epam.ta.reportportal.jooq.enums.BtsTypeEnum.class), this, "");

    /**
     * Create a <code>public.bug_tracking_system</code> table reference
     */
    public BugTrackingSystem() {
        this(DSL.name("bug_tracking_system"), null);
    }

    /**
     * Create an aliased <code>public.bug_tracking_system</code> table reference
     */
    public BugTrackingSystem(String alias) {
        this(DSL.name(alias), BUG_TRACKING_SYSTEM);
    }

    /**
     * Create an aliased <code>public.bug_tracking_system</code> table reference
     */
    public BugTrackingSystem(Name alias) {
        this(alias, BUG_TRACKING_SYSTEM);
    }

    private BugTrackingSystem(Name alias, Table<BugTrackingSystemRecord> aliased) {
        this(alias, aliased, null);
    }

    private BugTrackingSystem(Name alias, Table<BugTrackingSystemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.BUG_TRACKING_SYSTEM_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BugTrackingSystemRecord, Integer> getIdentity() {
        return Keys.IDENTITY_BUG_TRACKING_SYSTEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BugTrackingSystemRecord> getPrimaryKey() {
        return Keys.BUG_TRACKING_SYSTEM_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BugTrackingSystemRecord>> getKeys() {
        return Arrays.<UniqueKey<BugTrackingSystemRecord>>asList(Keys.BUG_TRACKING_SYSTEM_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BugTrackingSystem as(String alias) {
        return new BugTrackingSystem(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BugTrackingSystem as(Name alias) {
        return new BugTrackingSystem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BugTrackingSystem rename(String name) {
        return new BugTrackingSystem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BugTrackingSystem rename(Name name) {
        return new BugTrackingSystem(name, null);
    }
}
