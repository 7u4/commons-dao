/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables;


import com.epam.ta.reportportal.jooq.Indexes;
import com.epam.ta.reportportal.jooq.JPublic;
import com.epam.ta.reportportal.jooq.Keys;
import com.epam.ta.reportportal.jooq.tables.records.JLdapSynchronizationAttributesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JLdapSynchronizationAttributes extends TableImpl<JLdapSynchronizationAttributesRecord> {

    private static final long serialVersionUID = -1582555466;

    /**
     * The reference instance of <code>public.ldap_synchronization_attributes</code>
     */
    public static final JLdapSynchronizationAttributes LDAP_SYNCHRONIZATION_ATTRIBUTES = new JLdapSynchronizationAttributes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JLdapSynchronizationAttributesRecord> getRecordType() {
        return JLdapSynchronizationAttributesRecord.class;
    }

    /**
     * The column <code>public.ldap_synchronization_attributes.id</code>.
     */
    public final TableField<JLdapSynchronizationAttributesRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('ldap_synchronization_attributes_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.ldap_synchronization_attributes.email</code>.
     */
    public final TableField<JLdapSynchronizationAttributesRecord, String> EMAIL = createField(DSL.name("email"), org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>public.ldap_synchronization_attributes.full_name</code>.
     */
    public final TableField<JLdapSynchronizationAttributesRecord, String> FULL_NAME = createField(DSL.name("full_name"), org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>public.ldap_synchronization_attributes.photo</code>.
     */
    public final TableField<JLdapSynchronizationAttributesRecord, String> PHOTO = createField(DSL.name("photo"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * Create a <code>public.ldap_synchronization_attributes</code> table reference
     */
    public JLdapSynchronizationAttributes() {
        this(DSL.name("ldap_synchronization_attributes"), null);
    }

    /**
     * Create an aliased <code>public.ldap_synchronization_attributes</code> table reference
     */
    public JLdapSynchronizationAttributes(String alias) {
        this(DSL.name(alias), LDAP_SYNCHRONIZATION_ATTRIBUTES);
    }

    /**
     * Create an aliased <code>public.ldap_synchronization_attributes</code> table reference
     */
    public JLdapSynchronizationAttributes(Name alias) {
        this(alias, LDAP_SYNCHRONIZATION_ATTRIBUTES);
    }

    private JLdapSynchronizationAttributes(Name alias, Table<JLdapSynchronizationAttributesRecord> aliased) {
        this(alias, aliased, null);
    }

    private JLdapSynchronizationAttributes(Name alias, Table<JLdapSynchronizationAttributesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JLdapSynchronizationAttributes(Table<O> child, ForeignKey<O, JLdapSynchronizationAttributesRecord> key) {
        super(child, key, LDAP_SYNCHRONIZATION_ATTRIBUTES);
    }

    @Override
    public Schema getSchema() {
        return JPublic.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LDAP_SYNCHRONIZATION_ATTRIBUTES_PK);
    }

    @Override
    public Identity<JLdapSynchronizationAttributesRecord, Long> getIdentity() {
        return Keys.IDENTITY_LDAP_SYNCHRONIZATION_ATTRIBUTES;
    }

    @Override
    public UniqueKey<JLdapSynchronizationAttributesRecord> getPrimaryKey() {
        return Keys.LDAP_SYNCHRONIZATION_ATTRIBUTES_PK;
    }

    @Override
    public List<UniqueKey<JLdapSynchronizationAttributesRecord>> getKeys() {
        return Arrays.<UniqueKey<JLdapSynchronizationAttributesRecord>>asList(Keys.LDAP_SYNCHRONIZATION_ATTRIBUTES_PK);
    }

    @Override
    public JLdapSynchronizationAttributes as(String alias) {
        return new JLdapSynchronizationAttributes(DSL.name(alias), this);
    }

    @Override
    public JLdapSynchronizationAttributes as(Name alias) {
        return new JLdapSynchronizationAttributes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JLdapSynchronizationAttributes rename(String name) {
        return new JLdapSynchronizationAttributes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JLdapSynchronizationAttributes rename(Name name) {
        return new JLdapSynchronizationAttributes(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
