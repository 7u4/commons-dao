/*
 * This file is generated by jOOQ.
*/
package com.epam.ta.reportportal.jooq.tables;

import com.epam.ta.reportportal.jooq.Indexes;
import com.epam.ta.reportportal.jooq.Keys;
import com.epam.ta.reportportal.jooq.Public;
import com.epam.ta.reportportal.jooq.tables.records.OauthRegistrationRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OauthRegistration extends TableImpl<OauthRegistrationRecord> {

    private static final long serialVersionUID = 319343878;

    /**
     * The reference instance of <code>public.oauth_registration</code>
     */
    public static final OauthRegistration OAUTH_REGISTRATION = new OauthRegistration();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OauthRegistrationRecord> getRecordType() {
        return OauthRegistrationRecord.class;
    }

    /**
     * The column <code>public.oauth_registration.id</code>.
     */
    public final TableField<OauthRegistrationRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>public.oauth_registration.client_id</code>.
     */
    public final TableField<OauthRegistrationRecord, String> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>public.oauth_registration.client_secret</code>.
     */
    public final TableField<OauthRegistrationRecord, String> CLIENT_SECRET = createField("client_secret", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>public.oauth_registration.client_auth_method</code>.
     */
    public final TableField<OauthRegistrationRecord, String> CLIENT_AUTH_METHOD = createField("client_auth_method", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>public.oauth_registration.auth_grant_type</code>.
     */
    public final TableField<OauthRegistrationRecord, String> AUTH_GRANT_TYPE = createField("auth_grant_type", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>public.oauth_registration.redirect_uri_template</code>.
     */
    public final TableField<OauthRegistrationRecord, String> REDIRECT_URI_TEMPLATE = createField("redirect_uri_template", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>public.oauth_registration.authorization_uri</code>.
     */
    public final TableField<OauthRegistrationRecord, String> AUTHORIZATION_URI = createField("authorization_uri", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>public.oauth_registration.token_uri</code>.
     */
    public final TableField<OauthRegistrationRecord, String> TOKEN_URI = createField("token_uri", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>public.oauth_registration.user_info_endpoint_uri</code>.
     */
    public final TableField<OauthRegistrationRecord, String> USER_INFO_ENDPOINT_URI = createField("user_info_endpoint_uri", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>public.oauth_registration.user_info_endpoint_name_attr</code>.
     */
    public final TableField<OauthRegistrationRecord, String> USER_INFO_ENDPOINT_NAME_ATTR = createField("user_info_endpoint_name_attr", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>public.oauth_registration.jwk_set_uri</code>.
     */
    public final TableField<OauthRegistrationRecord, String> JWK_SET_URI = createField("jwk_set_uri", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>public.oauth_registration.client_name</code>.
     */
    public final TableField<OauthRegistrationRecord, String> CLIENT_NAME = createField("client_name", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * Create a <code>public.oauth_registration</code> table reference
     */
    public OauthRegistration() {
        this(DSL.name("oauth_registration"), null);
    }

    /**
     * Create an aliased <code>public.oauth_registration</code> table reference
     */
    public OauthRegistration(String alias) {
        this(DSL.name(alias), OAUTH_REGISTRATION);
    }

    /**
     * Create an aliased <code>public.oauth_registration</code> table reference
     */
    public OauthRegistration(Name alias) {
        this(alias, OAUTH_REGISTRATION);
    }

    private OauthRegistration(Name alias, Table<OauthRegistrationRecord> aliased) {
        this(alias, aliased, null);
    }

    private OauthRegistration(Name alias, Table<OauthRegistrationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.OAUTH_REGISTRATION_CLIENT_ID_KEY, Indexes.OAUTH_REGISTRATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OauthRegistrationRecord> getPrimaryKey() {
        return Keys.OAUTH_REGISTRATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OauthRegistrationRecord>> getKeys() {
        return Arrays.<UniqueKey<OauthRegistrationRecord>>asList(Keys.OAUTH_REGISTRATION_PKEY, Keys.OAUTH_REGISTRATION_CLIENT_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OauthRegistration as(String alias) {
        return new OauthRegistration(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OauthRegistration as(Name alias) {
        return new OauthRegistration(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OauthRegistration rename(String name) {
        return new OauthRegistration(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OauthRegistration rename(Name name) {
        return new OauthRegistration(name, null);
    }
}
