/*
 * This file is generated by jOOQ.
*/
package com.epam.ta.reportportal.jooq.tables;

import com.epam.ta.reportportal.jooq.Indexes;
import com.epam.ta.reportportal.jooq.Keys;
import com.epam.ta.reportportal.jooq.Public;
import com.epam.ta.reportportal.jooq.tables.records.IssueTicketRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IssueTicket extends TableImpl<IssueTicketRecord> {

    private static final long serialVersionUID = 927204161;

    /**
     * The reference instance of <code>public.issue_ticket</code>
     */
    public static final IssueTicket ISSUE_TICKET = new IssueTicket();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IssueTicketRecord> getRecordType() {
        return IssueTicketRecord.class;
    }

    /**
     * The column <code>public.issue_ticket.issue_id</code>.
     */
    public final TableField<IssueTicketRecord, Long> ISSUE_ID = createField("issue_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.issue_ticket.ticket_id</code>.
     */
    public final TableField<IssueTicketRecord, Long> TICKET_ID = createField("ticket_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.issue_ticket</code> table reference
     */
    public IssueTicket() {
        this(DSL.name("issue_ticket"), null);
    }

    /**
     * Create an aliased <code>public.issue_ticket</code> table reference
     */
    public IssueTicket(String alias) {
        this(DSL.name(alias), ISSUE_TICKET);
    }

    /**
     * Create an aliased <code>public.issue_ticket</code> table reference
     */
    public IssueTicket(Name alias) {
        this(alias, ISSUE_TICKET);
    }

    private IssueTicket(Name alias, Table<IssueTicketRecord> aliased) {
        this(alias, aliased, null);
    }

    private IssueTicket(Name alias, Table<IssueTicketRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ISSUE_TICKET_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IssueTicketRecord> getPrimaryKey() {
        return Keys.ISSUE_TICKET_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IssueTicketRecord>> getKeys() {
        return Arrays.<UniqueKey<IssueTicketRecord>>asList(Keys.ISSUE_TICKET_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<IssueTicketRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<IssueTicketRecord, ?>>asList(Keys.ISSUE_TICKET__ISSUE_TICKET_ISSUE_ID_FKEY, Keys.ISSUE_TICKET__ISSUE_TICKET_TICKET_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IssueTicket as(String alias) {
        return new IssueTicket(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IssueTicket as(Name alias) {
        return new IssueTicket(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IssueTicket rename(String name) {
        return new IssueTicket(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IssueTicket rename(Name name) {
        return new IssueTicket(name, null);
    }
}
