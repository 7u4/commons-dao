/*
 * This file is generated by jOOQ.
*/
package com.epam.ta.reportportal.jooq.tables;

import com.epam.ta.reportportal.jooq.Indexes;
import com.epam.ta.reportportal.jooq.Keys;
import com.epam.ta.reportportal.jooq.Public;
import com.epam.ta.reportportal.jooq.tables.records.DashboardWidgetRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DashboardWidget extends TableImpl<DashboardWidgetRecord> {

    private static final long serialVersionUID = 1383145522;

    /**
     * The reference instance of <code>public.dashboard_widget</code>
     */
    public static final DashboardWidget DASHBOARD_WIDGET = new DashboardWidget();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DashboardWidgetRecord> getRecordType() {
        return DashboardWidgetRecord.class;
    }

    /**
     * The column <code>public.dashboard_widget.dashboard_id</code>.
     */
    public final TableField<DashboardWidgetRecord, Integer> DASHBOARD_ID = createField("dashboard_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.dashboard_widget.widget_id</code>.
     */
    public final TableField<DashboardWidgetRecord, Integer> WIDGET_ID = createField("widget_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.dashboard_widget.widget_name</code>.
     */
    public final TableField<DashboardWidgetRecord, String> WIDGET_NAME = createField("widget_name", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.dashboard_widget.wdiget_width</code>.
     */
    public final TableField<DashboardWidgetRecord, Integer> WDIGET_WIDTH = createField("wdiget_width", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.dashboard_widget.widget_heigth</code>.
     */
    public final TableField<DashboardWidgetRecord, Integer> WIDGET_HEIGTH = createField("widget_heigth", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.dashboard_widget.widget_position_x</code>.
     */
    public final TableField<DashboardWidgetRecord, Integer> WIDGET_POSITION_X = createField("widget_position_x", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.dashboard_widget.widget_position_y</code>.
     */
    public final TableField<DashboardWidgetRecord, Integer> WIDGET_POSITION_Y = createField("widget_position_y", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.dashboard_widget</code> table reference
     */
    public DashboardWidget() {
        this(DSL.name("dashboard_widget"), null);
    }

    /**
     * Create an aliased <code>public.dashboard_widget</code> table reference
     */
    public DashboardWidget(String alias) {
        this(DSL.name(alias), DASHBOARD_WIDGET);
    }

    /**
     * Create an aliased <code>public.dashboard_widget</code> table reference
     */
    public DashboardWidget(Name alias) {
        this(alias, DASHBOARD_WIDGET);
    }

    private DashboardWidget(Name alias, Table<DashboardWidgetRecord> aliased) {
        this(alias, aliased, null);
    }

    private DashboardWidget(Name alias, Table<DashboardWidgetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DASHBOARD_WIDGET_PK, Indexes.WIDGET_ON_DASHBOARD_UNQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DashboardWidgetRecord> getPrimaryKey() {
        return Keys.DASHBOARD_WIDGET_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DashboardWidgetRecord>> getKeys() {
        return Arrays.<UniqueKey<DashboardWidgetRecord>>asList(Keys.DASHBOARD_WIDGET_PK, Keys.WIDGET_ON_DASHBOARD_UNQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DashboardWidgetRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DashboardWidgetRecord, ?>>asList(Keys.DASHBOARD_WIDGET__DASHBOARD_WIDGET_DASHBOARD_ID_FKEY, Keys.DASHBOARD_WIDGET__DASHBOARD_WIDGET_WIDGET_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DashboardWidget as(String alias) {
        return new DashboardWidget(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DashboardWidget as(Name alias) {
        return new DashboardWidget(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DashboardWidget rename(String name) {
        return new DashboardWidget(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DashboardWidget rename(Name name) {
        return new DashboardWidget(name, null);
    }
}
