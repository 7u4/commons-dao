/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables;


import com.epam.ta.reportportal.jooq.Indexes;
import com.epam.ta.reportportal.jooq.JPublic;
import com.epam.ta.reportportal.jooq.Keys;
import com.epam.ta.reportportal.jooq.tables.records.JSamlProviderDetailsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JSamlProviderDetails extends TableImpl<JSamlProviderDetailsRecord> {

    private static final long serialVersionUID = -844899294;

    /**
     * The reference instance of <code>public.saml_provider_details</code>
     */
    public static final JSamlProviderDetails SAML_PROVIDER_DETAILS = new JSamlProviderDetails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JSamlProviderDetailsRecord> getRecordType() {
        return JSamlProviderDetailsRecord.class;
    }

    /**
     * The column <code>public.saml_provider_details.id</code>.
     */
    public final TableField<JSamlProviderDetailsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('saml_provider_details_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.saml_provider_details.idp_name</code>.
     */
    public final TableField<JSamlProviderDetailsRecord, String> IDP_NAME = createField(DSL.name("idp_name"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.saml_provider_details.idp_metadata_url</code>.
     */
    public final TableField<JSamlProviderDetailsRecord, String> IDP_METADATA_URL = createField(DSL.name("idp_metadata_url"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.saml_provider_details.idp_name_id</code>.
     */
    public final TableField<JSamlProviderDetailsRecord, String> IDP_NAME_ID = createField(DSL.name("idp_name_id"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.saml_provider_details.idp_alias</code>.
     */
    public final TableField<JSamlProviderDetailsRecord, String> IDP_ALIAS = createField(DSL.name("idp_alias"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.saml_provider_details.idp_url</code>.
     */
    public final TableField<JSamlProviderDetailsRecord, String> IDP_URL = createField(DSL.name("idp_url"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.saml_provider_details.full_name_attribute_id</code>.
     */
    public final TableField<JSamlProviderDetailsRecord, String> FULL_NAME_ATTRIBUTE_ID = createField(DSL.name("full_name_attribute_id"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.saml_provider_details.first_name_attribute_id</code>.
     */
    public final TableField<JSamlProviderDetailsRecord, String> FIRST_NAME_ATTRIBUTE_ID = createField(DSL.name("first_name_attribute_id"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.saml_provider_details.last_name_attribute_id</code>.
     */
    public final TableField<JSamlProviderDetailsRecord, String> LAST_NAME_ATTRIBUTE_ID = createField(DSL.name("last_name_attribute_id"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.saml_provider_details.email_attribute_id</code>.
     */
    public final TableField<JSamlProviderDetailsRecord, String> EMAIL_ATTRIBUTE_ID = createField(DSL.name("email_attribute_id"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.saml_provider_details.enabled</code>.
     */
    public final TableField<JSamlProviderDetailsRecord, Boolean> ENABLED = createField(DSL.name("enabled"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>public.saml_provider_details</code> table reference
     */
    public JSamlProviderDetails() {
        this(DSL.name("saml_provider_details"), null);
    }

    /**
     * Create an aliased <code>public.saml_provider_details</code> table reference
     */
    public JSamlProviderDetails(String alias) {
        this(DSL.name(alias), SAML_PROVIDER_DETAILS);
    }

    /**
     * Create an aliased <code>public.saml_provider_details</code> table reference
     */
    public JSamlProviderDetails(Name alias) {
        this(alias, SAML_PROVIDER_DETAILS);
    }

    private JSamlProviderDetails(Name alias, Table<JSamlProviderDetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private JSamlProviderDetails(Name alias, Table<JSamlProviderDetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JSamlProviderDetails(Table<O> child, ForeignKey<O, JSamlProviderDetailsRecord> key) {
        super(child, key, SAML_PROVIDER_DETAILS);
    }

    @Override
    public Schema getSchema() {
        return JPublic.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SAML_PROVIDER_DETAILS_PKEY);
    }

    @Override
    public Identity<JSamlProviderDetailsRecord, Long> getIdentity() {
        return Keys.IDENTITY_SAML_PROVIDER_DETAILS;
    }

    @Override
    public UniqueKey<JSamlProviderDetailsRecord> getPrimaryKey() {
        return Keys.SAML_PROVIDER_DETAILS_PKEY;
    }

    @Override
    public List<UniqueKey<JSamlProviderDetailsRecord>> getKeys() {
        return Arrays.<UniqueKey<JSamlProviderDetailsRecord>>asList(Keys.SAML_PROVIDER_DETAILS_PKEY);
    }

    @Override
    public JSamlProviderDetails as(String alias) {
        return new JSamlProviderDetails(DSL.name(alias), this);
    }

    @Override
    public JSamlProviderDetails as(Name alias) {
        return new JSamlProviderDetails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JSamlProviderDetails rename(String name) {
        return new JSamlProviderDetails(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JSamlProviderDetails rename(Name name) {
        return new JSamlProviderDetails(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, String, String, String, String, String, String, String, String, String, Boolean> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
