/*
 * This file is generated by jOOQ.
*/
package com.epam.ta.reportportal.jooq.tables.records;

import com.epam.ta.reportportal.jooq.enums.TestItemTypeEnum;
import com.epam.ta.reportportal.jooq.tables.TestItem;
import com.epam.ta.reportportal.jooq.udt.records.ParameterRecord;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import javax.persistence.*;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "test_item", schema = "public", indexes = {
    @Index(name = "test_item_pk", unique = true, columnList = "id ASC")
})
public class TestItemRecord extends UpdatableRecordImpl<TestItemRecord> implements Record8<Long, String, TestItemTypeEnum, Timestamp, String, Timestamp, ParameterRecord[], String> {

    private static final long serialVersionUID = -31546373;

    /**
     * Setter for <code>public.test_item.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.test_item.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 64)
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.test_item.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.test_item.name</code>.
     */
    @Column(name = "name", length = 256)
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.test_item.type</code>.
     */
    public void setType(TestItemTypeEnum value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.test_item.type</code>.
     */
    @Column(name = "type", nullable = false)
    public TestItemTypeEnum getType() {
        return (TestItemTypeEnum) get(2);
    }

    /**
     * Setter for <code>public.test_item.start_time</code>.
     */
    public void setStartTime(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.test_item.start_time</code>.
     */
    @Column(name = "start_time", nullable = false)
    public Timestamp getStartTime() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>public.test_item.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.test_item.description</code>.
     */
    @Column(name = "description")
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.test_item.last_modified</code>.
     */
    public void setLastModified(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.test_item.last_modified</code>.
     */
    @Column(name = "last_modified", nullable = false)
    public Timestamp getLastModified() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>public.test_item.parameters</code>.
     */
    public void setParameters(ParameterRecord... value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.test_item.parameters</code>.
     */
    @Column(name = "parameters")
    public ParameterRecord[] getParameters() {
        return (ParameterRecord[]) get(6);
    }

    /**
     * Setter for <code>public.test_item.unique_id</code>.
     */
    public void setUniqueId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.test_item.unique_id</code>.
     */
    @Column(name = "unique_id", nullable = false, length = 256)
    public String getUniqueId() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, TestItemTypeEnum, Timestamp, String, Timestamp, ParameterRecord[], String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, String, TestItemTypeEnum, Timestamp, String, Timestamp, ParameterRecord[], String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TestItem.TEST_ITEM.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TestItem.TEST_ITEM.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<TestItemTypeEnum> field3() {
        return TestItem.TEST_ITEM.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return TestItem.TEST_ITEM.START_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return TestItem.TEST_ITEM.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return TestItem.TEST_ITEM.LAST_MODIFIED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ParameterRecord[]> field7() {
        return TestItem.TEST_ITEM.PARAMETERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return TestItem.TEST_ITEM.UNIQUE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestItemTypeEnum component3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getLastModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParameterRecord[] component7() {
        return getParameters();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getUniqueId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestItemTypeEnum value3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getStartTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getLastModified();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ParameterRecord[] value7() {
        return getParameters();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getUniqueId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestItemRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestItemRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestItemRecord value3(TestItemTypeEnum value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestItemRecord value4(Timestamp value) {
        setStartTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestItemRecord value5(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestItemRecord value6(Timestamp value) {
        setLastModified(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestItemRecord value7(ParameterRecord... value) {
        setParameters(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestItemRecord value8(String value) {
        setUniqueId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestItemRecord values(Long value1, String value2, TestItemTypeEnum value3, Timestamp value4, String value5, Timestamp value6, ParameterRecord[] value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TestItemRecord
     */
    public TestItemRecord() {
        super(TestItem.TEST_ITEM);
    }

    /**
     * Create a detached, initialised TestItemRecord
     */
    public TestItemRecord(Long id, String name, TestItemTypeEnum type, Timestamp startTime, String description, Timestamp lastModified, ParameterRecord[] parameters, String uniqueId) {
        super(TestItem.TEST_ITEM);

        set(0, id);
        set(1, name);
        set(2, type);
        set(3, startTime);
        set(4, description);
        set(5, lastModified);
        set(6, parameters);
        set(7, uniqueId);
    }
}
