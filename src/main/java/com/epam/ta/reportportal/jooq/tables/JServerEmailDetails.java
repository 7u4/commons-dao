/*
 *
 *  Copyright (C) 2018 EPAM Systems
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables;


import com.epam.ta.reportportal.jooq.Indexes;
import com.epam.ta.reportportal.jooq.JPublic;
import com.epam.ta.reportportal.jooq.Keys;
import com.epam.ta.reportportal.jooq.tables.records.JServerEmailDetailsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JServerEmailDetails extends TableImpl<JServerEmailDetailsRecord> {

    private static final long serialVersionUID = 1799753432;

    /**
     * The reference instance of <code>public.server_email_details</code>
     */
    public static final JServerEmailDetails SERVER_EMAIL_DETAILS = new JServerEmailDetails();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JServerEmailDetailsRecord> getRecordType() {
        return JServerEmailDetailsRecord.class;
    }

    /**
     * The column <code>public.server_email_details.id</code>.
     */
    public final TableField<JServerEmailDetailsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('server_email_details_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.server_email_details.enabled</code>.
     */
    public final TableField<JServerEmailDetailsRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.server_email_details.host</code>.
     */
    public final TableField<JServerEmailDetailsRecord, String> HOST = createField("host", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.server_email_details.port</code>.
     */
    public final TableField<JServerEmailDetailsRecord, Integer> PORT = createField("port", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.server_email_details.protocol</code>.
     */
    public final TableField<JServerEmailDetailsRecord, String> PROTOCOL = createField("protocol", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.server_email_details.auth_enabled</code>.
     */
    public final TableField<JServerEmailDetailsRecord, Boolean> AUTH_ENABLED = createField("auth_enabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.server_email_details.star_tls_enabled</code>.
     */
    public final TableField<JServerEmailDetailsRecord, Boolean> STAR_TLS_ENABLED = createField("star_tls_enabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.server_email_details.ssl_enabled</code>.
     */
    public final TableField<JServerEmailDetailsRecord, Boolean> SSL_ENABLED = createField("ssl_enabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.server_email_details.username</code>.
     */
    public final TableField<JServerEmailDetailsRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.server_email_details.password</code>.
     */
    public final TableField<JServerEmailDetailsRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.server_email_details.recieved_from</code>.
     */
    public final TableField<JServerEmailDetailsRecord, String> RECIEVED_FROM = createField("recieved_from", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * Create a <code>public.server_email_details</code> table reference
     */
    public JServerEmailDetails() {
        this(DSL.name("server_email_details"), null);
    }

    /**
     * Create an aliased <code>public.server_email_details</code> table reference
     */
    public JServerEmailDetails(String alias) {
        this(DSL.name(alias), SERVER_EMAIL_DETAILS);
    }

    /**
     * Create an aliased <code>public.server_email_details</code> table reference
     */
    public JServerEmailDetails(Name alias) {
        this(alias, SERVER_EMAIL_DETAILS);
    }

    private JServerEmailDetails(Name alias, Table<JServerEmailDetailsRecord> aliased) {
        this(alias, aliased, null);
    }

    private JServerEmailDetails(Name alias, Table<JServerEmailDetailsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JServerEmailDetails(Table<O> child, ForeignKey<O, JServerEmailDetailsRecord> key) {
        super(child, key, SERVER_EMAIL_DETAILS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JPublic.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SERVER_EMAIL_DETAILS_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JServerEmailDetailsRecord, Long> getIdentity() {
        return Keys.IDENTITY_SERVER_EMAIL_DETAILS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JServerEmailDetailsRecord> getPrimaryKey() {
        return Keys.SERVER_EMAIL_DETAILS_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JServerEmailDetailsRecord>> getKeys() {
        return Arrays.<UniqueKey<JServerEmailDetailsRecord>>asList(Keys.SERVER_EMAIL_DETAILS_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JServerEmailDetails as(String alias) {
        return new JServerEmailDetails(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JServerEmailDetails as(Name alias) {
        return new JServerEmailDetails(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JServerEmailDetails rename(String name) {
        return new JServerEmailDetails(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JServerEmailDetails rename(Name name) {
        return new JServerEmailDetails(name, null);
    }
}
