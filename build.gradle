/*
 * Copyright 2019 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id 'nu.studer.jooq' version '3.0.3'
    id 'jacoco'
    id 'java'
    id "org.owasp.dependencycheck" version "5.2.0"
}

apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/release-commons.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/copy-database-scripts.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/build-quality.gradle'
apply from: 'https://raw.githubusercontent.com/reportportal/gradle-scripts/master/jacoco.gradle'
apply from: 'jooq.gradle'

project.description = 'EPAM Report portal. Common DAO Layer'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://dl.bintray.com/epam/reportportal" }
    maven { url 'https://jitpack.io' }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

wrapper {
    gradleVersion = '5.4.1'
}

dependencyManagement {
    imports {
//        mavenBom "org.springframework.boot:spring-boot-dependencies:2.1.5.RELEASE"
        mavenBom 'com.github.reportportal:commons-bom:f060f9c'
    }
}

project.ext {
    limits = [
            'instruction': 70,
            'branch'     : 36,
            'line'       : 60,
            'complexity' : 49,
            'method'     : 55,
            'class'      : 87
    ]
    releaseMode = project.hasProperty("releaseMode")
    testScriptsSrc = [
            'https://raw.githubusercontent.com/reportportal/migrations/master/migrations/1_initialize_schema.up.sql': 'V001__initialize_schema.sql',
            'https://raw.githubusercontent.com/reportportal/migrations/master/migrations/3_default_data.up.sql'     : 'V002__default_data.sql',
    ]
    excludeTests = [
            'com/epam/ta/reportportal/jooq/**',
            'com/epam/ta/reportportal/config/**',
            'com/epam/ta/reportportal/commons/accessible',
            'com/epam/ta/reportportal/commons/querygen/constant',
            'com/epam/ta/reportportal/exception',
            'com/epam/ta/reportportal/entity/oauth',
            'com/epam/ta/reportportal/entity/bts',
            'com/epam/ta/reportportal/entity/ldap',
            'com/epam/ta/reportportal/entity/widget/content/**'
    ]
}

dependencies {
    if (releaseMode) {
        compile 'com.epam.reportportal:commons:5.0.0-BETA-2'
        compile 'com.epam.reportportal:commons-rules:5.0.0-BETA-6'
        compile 'com.epam.reportportal:commons-model:5.0.0-RC-1'
    } else {
        compile('com.github.reportportal:commons:5.0.0-BETA-2')
        compile 'com.github.reportportal:commons-rules:5.0.0-BETA-6'
        compile 'com.github.reportportal:commons-model:5.0.0-RC-1'
    }
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'

    compile 'org.hibernate:hibernate-core:5.4.4.Final'
    compile 'org.postgresql:postgresql'
    compile 'org.jooq:jooq'
    jooqRuntime 'org.postgresql:postgresql'

    compile 'io.minio:minio:6.0.10'

    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile 'org.hibernate.validator:hibernate-validator:6.1.0.Final'

    compile 'commons-fileupload:commons-fileupload:1.4'
    compile 'commons-validator:commons-validator:1.6'
    compile 'org.jasypt:jasypt:1.9.2'
    compile 'org.apache.commons:commons-lang3:3.9'

    compile 'io.zonky.test:embedded-postgres:1.2.1'
    compile 'org.flywaydb:flyway-core:5.2.4'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.flywaydb.flyway-test-extensions:flyway-spring-test:5.2.1'
}

tasks.withType(Javadoc).all { enabled = false }

test {
    useJUnitPlatform()
    testLogging {
        events = ["failed"]
        exceptionFormat = "short"
    }
}
